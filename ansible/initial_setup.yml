---
- hosts: all
  become: true
  tasks:

  - name: Upgrade all packages
    yum: name=* state=latest

  - name: Writing host file
    blockinfile:
      path: "/etc/hosts"
      block: |
        {{ master_ip }} {{ master }} worker-node-1 master-node
        {{ worker_ip1 }} {{ worker1 }} worker-node-2
        {{ worker_ip2 }} {{ worker2 }} worker-node-3

  - name: Disabling SELinux
    selinux:
      state: disabled
    register: selinuxdisabled

  - name: Print the changes in Configurtion file 
    command: grep SELINUX /etc/sysconfig/selinux
    register: sevalue
  - debug:
      var: sevalue.stdout_lines

  - name: Unconditionally reboot all the nodes
    reboot:

  - name: Populate service facts
    service_facts:

  - name: Disable firewalld Services
    service:
      name: "{{item}}"
      state: stopped
      enabled: no
    loop:
    - firewalld
    when: ansible_facts.services[item] is defined

  - name: Remove firewalld
    yum:
      name: firewalld
      state: absent

  - name: Disabling Swap on all nodes
    shell: swapoff -a

  - name: Commenting Swap entries in /etc/fstab
    replace:
     path: /etc/fstab
     regexp: '(.*swap*)'
     replace: '#\1'
  
  - name: Creating a file with content for kubernetes repo info
    copy:
      dest: "/etc/yum.repos.d/kubernetes.repo"
      content: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=0
        repo_gpgcheck=0
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: Creating a file with content for docker repo info
    copy:
      dest: "/etc/yum.repos.d/docker-ce.repo"
      content: |
        [docker-ce-stable]
        name=Docker CE Stable - $basearch
        baseurl=https://download.docker.com/linux/centos/$releasever/$basearch/stable
        enabled=1
        gpgcheck=0
        gpgkey=https://download.docker.com/linux/centos/gpg
  
  - name: Configure docker
    yum:
      name: docker-ce
      state: present

  - name: Manage docker services
    service:
      name: docker
      state: started
      enabled: yes

  - name: Adding docker user
    command: usermod -aG docker root

  - name: Changing permissions for docker
    file:
      path: /var/run/docker.sock
      mode: 666

  - name: Delete content if the k8s conf file already exists
    copy:
      content: "{}"
      dest: /etc/sysctl.d/k8s.conf
      force: true
  
  - name: Update iptables config
    blockinfile:
      path: "/etc/sysctl.d/k8s.conf"
      block: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1

  - name: Install kubeadm
    yum:
      name: kubeadm
      state: present

  - name: Delete content if the kubeadm conf file already exists
    copy:
      content: "{}"
      dest: /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
      force: true
  
  - name: Adding --cgroup-driver=cgroupfs to conf file
    blockinfile:
      path: "/usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf"
      block: |
        # Note: This dropin only works with kubeadm and kubelet v1.11+
        [Service]
        Environment="KUBELET_KUBECONFIG_ARGS=--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf"
        Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml --cgroup-driver=cgroupfs"
        # This is a file that "kubeadm init" and "kubeadm join" generates at runtime, populating the KUBELET_KUBEADM_ARGS variable dynamically
        EnvironmentFile=-/var/lib/kubelet/kubeadm-flags.env
        # This is a file that the user can use for overrides of the kubelet args as a last resort. Preferably, the user should use
        # the .NodeRegistration.KubeletExtraArgs object in the configuration files instead. KUBELET_EXTRA_ARGS should be sourced from this file.
        EnvironmentFile=-/etc/sysconfig/kubelet
        ExecStart=
        ExecStart=/usr/bin/kubelet $KUBELET_KUBECONFIG_ARGS $KUBELET_CONFIG_ARGS $KUBELET_KUBEADM_ARGS $KUBELET_EXTRA_ARGS

  - name: Removing if a config file exist
    file:
      state: absent
      path: /etc/containerd/config.toml
  
  - name: Restart containerd service
    service:
      name: containerd
      state: restarted
